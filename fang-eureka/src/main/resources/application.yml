server:
  port: 1111

spring:
  basic:
    enabled: true
    # z注册中心用户名和密码，安全认证
  security:
    user:
      name: admin
      password: fxm-pactera

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

eureka:
  server:
    wait-time-in-ms-when-sync-empty: 0   #在eureka服务器获取不到集群里对等服务器上的实例时，需要等待的时间，单机默认0
    shouldUseReadOnlyResponseCache: true #eureka是CAP理论种基于AP策略，为了保证强一致性关闭此切换CP 默认不关闭 false关闭
      #设为false，关闭自我保护，即Eureka server在云心光器件会去统计心跳失败比例在15分钟之内是否低于85%,如果低于85%，EurekaServer
      #会将这些事例保护起来，让这些事例不会过期，但是在保护器内如果刚哈这个服务提供者非正常下线了，此时服务消费者会拿到一个无效的服务
      #实例，此时调用会失败，对于这个问题需要服务消费者端有一些容错机制，如重试、断路器等；
    enable-self-preservation: false    #关闭服务器自我保护，客户端心跳检测15分钟内错误达到80%服务会保护，导致别人还认为是好用的服务
    #扫描失效服务的间隔时间（单位是毫秒，摩恩是60*1000)，即60s
    eviction-interval-timer-in-ms: 60000 #清理间隔（单位毫秒，默认是60*1000）5秒将客户端剔除的服务在服务注册列表中剔除#
    response-cache-update-interval-ms: 3000  #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上 #eureka server刷新readCacheMap的时间，注意，client读取的是readCacheMap，这个时间决定了多久会把readWriteCacheMap的缓存更新到readCacheMap上默认30s
    response-cache-auto-expiration-in-seconds: 180   #eureka server缓存readWriteCacheMap失效时间，这个只有在这个时间过去后缓存才会失效，失效前不会更新，过期后从registry重新读取注册服务信息，registry是一个ConcurrentHashMap。
    renewal-percent-threshold: 0.49  #  指定每分钟需要收到的续约次数的阈值，默认值就是：0.85
  client:
    #是否启用湖区注册服务信息，因为这是一个单节点的EurekaServer，不需要同步其他的EurekaServer节点的数据，所以设置为false；
    fetch-registry: false      #为true时，可以启动，但报异常：Cannot execute request on any known server ，是否从eureka服务端获取注册信息，消费者需要配置true
    #表示是否向eureka注册服务，即在自己的eureka中注册自己，默认为true，此处应该设置为false；
    register-with-eureka: true  #false:不作为一个客户端注册到注册中心,是否将自身的实例信息注册到eureka服务器
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 5  #从eureka服务端获取注册信息的间隔时间
    service-url:
      defaultZone: http://admin:fxm-pactera@127.0.0.1:1111/eureka
  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${spring.cloud.client.ip-address}:${spring.application.instance_id:${server.port}}
    lease-renewal-interval-in-seconds: 10    # 续约更新时间间隔（默认30秒），eureka客户端向服务端发送心跳的时间间隔。eureka客户需要多长时间发送心跳给eureka服务器，表明它仍然活着
    lease-expiration-duration-in-seconds: 30 # 续约到期时间（默认90秒）Eureka服务器在接收到实例的最后一次发出的心跳后，需要等待多久才可以将此实例删除，默认为90秒
ribbon:
  ServerListRefreshInterval: 1000    #刷新服务列表源的间隔时间
